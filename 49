def fourty_nine():
    M = int(input())
    N = int(input())
    win = GraphWin("This window", 1 + N * 10, 1 + M * 10, autoflush=False)
    win.setBackground("white")
    ar = list()
    for i in range(N):
        arh = list()
        for j in range(M):
            arh.append(randint(1, 2))
        ar.append(arh)
    '''ar[4][1] = 1
    ar[4][2] = 1
    ar[4][3] = 1
    ar[3][3] = 1
    ar[2][2] = 1'''

    l=list()
    lk = 0

    for i in range(N):
        lh = list()
        for j in range(M):
            r = Rectangle(Point(1 + 10*j, 1+ 10*i), Point(11 + 10 *j, 11 + 10*i))
            if ar[i][j] == 1:
                r.setFill("Green")
            elif ar[i][j] == 2:
                r.setFill("black")
            lh.append(r)
        l.append(lh)

    while True:
        for i in range(N):
            for j in range(M):
                l[i][j].draw(win)

        update(30)

        for i in range(N):
            for j in range(M):
                l[i][j].undraw()

        arh = list()
        for i in range(N):
            a = list()
            for j in range(M):
                a.append(ar[i][j])
            arh.append(a)


        for i in range(N):
            for j in range(M):
                lk = 0
                if i == 0:
                    if j == 0:
                        if ar[N-1][M-1] == 1:
                            lk+=1
                    else:
                        if ar[N-1][j-1] == 1:
                            lk += 1
                else:
                    if j == 0:
                        if ar[i-1][M-1] == 1:
                            lk += 1
                    else:
                        if ar[i-1][j-1] == 1:
                            lk += 1


                if j == 0:
                    if ar[i][M-1] == 1:
                        lk += 1
                else:
                    if ar[i][j-1] == 1:
                        lk += 1

                if i == N-1:
                    if j == 0:
                        if ar[0][M - 1] == 1:
                            lk += 1
                    else:
                        if ar[0][j-1] == 1:
                            lk+=1
                else:
                    if j == 0:
                        if ar[i+1][M - 1] == 1:
                            lk += 1
                    else:
                        if ar[i + 1][j - 1] == 1:
                            lk += 1

                if i == N-1:
                    if j == M-1:
                        if ar[0][0] == 1:
                            lk+=1
                    else:
                        if ar[0][j+1] == 1:
                            lk += 1
                else:
                    if j == M-1:
                        if ar[i+1][0] == 1:
                            lk += 1
                    else:
                        if ar[i+1][j+1] == 1:
                            lk += 1

                if i == 0:
                    if j == M-1:
                        if ar[N-1][0] == 1:
                            lk+=1
                    else:
                        if ar[N-1][j+1] == 1:
                            lk += 1
                else:
                    if j == M-1:
                        if ar[i-1][0] == 1:
                            lk += 1
                    else:
                        if ar[i-1][j+1] == 1:
                            lk += 1


                if j == M-1:
                    if ar[i][0] == 1:
                        lk += 1
                else:
                    if ar[i][j+1] == 1:
                        lk += 1

                if i == 0:
                    if ar[N-1][j] == 1:
                        lk += 1
                else:
                    if ar[i-1][j] == 1:
                        lk += 1

                if i == N-1:
                    if ar[0][j] == 1:
                        lk += 1
                else:
                    if ar[i+1][j] == 1:
                        lk += 1


                if ar[i][j] == 1:
                    if lk != 2 and lk != 3:
                        arh[i][j] = 2
                else:
                    if lk == 3:
                        arh[i][j] = 1

        for i in range(N):
            for j in range(M):
                ar[i][j] = arh[i][j]

        for i in range(N):
            for j in range(M):
                if ar[i][j] == 1:
                    l[i][j].setFill("Green")
                elif ar[i][j] == 2:
                    l[i][j].setFill("black")
